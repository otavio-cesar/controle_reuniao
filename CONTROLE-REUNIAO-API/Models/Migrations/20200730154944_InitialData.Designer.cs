// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models.Context;

namespace Models.Migrations
{
    [DbContext(typeof(ControleReuniaoContext))]
    [Migration("20200730154944_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("Models.Entities.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Dia")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Inicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Responsavel")
                        .HasColumnType("TEXT");

                    b.Property<int>("SalaId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Termino")
                        .HasColumnType("TEXT");

                    b.HasKey("EventoId");

                    b.HasIndex("SalaId");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("Models.Entities.Sala", b =>
                {
                    b.Property<int>("SalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("SalaId");

                    b.ToTable("Sala");

                    b.HasData(
                        new
                        {
                            SalaId = 1,
                            Nome = "Sala executiva"
                        },
                        new
                        {
                            SalaId = 2,
                            Nome = "Sala gerencial"
                        },
                        new
                        {
                            SalaId = 3,
                            Nome = "Sala padrão"
                        });
                });

            modelBuilder.Entity("Models.Entities.Evento", b =>
                {
                    b.HasOne("Models.Entities.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
